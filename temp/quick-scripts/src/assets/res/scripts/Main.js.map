{"version":3,"sources":["assets/res/scripts/Main.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;AAEtF,uCAAkC;AAClC,+BAA0B;AAEpB,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAAkC,wBAAY;IAA9C;QAAA,qEA2GC;QAvGG,iBAAW,GAAsB,EAAE,CAAC;QAEpC,YAAM,GAAc,IAAI,CAAC;QAGzB,kBAAY,GAAc,EAAE,CAAC;QAE7B,kBAAY,GAAY,IAAI,CAAC;QAG7B,wBAAwB;QACxB,iBAAW,GAAG,EAAE,CAAC;QACjB,aAAO,GAAG,EAAE,CAAC;QACb,YAAM,GAAG,KAAK,CAAC;QACf,eAAS,GAAG,CAAC,CAAC,CAAC;QACf,kBAAY,GAAG,CAAC,CAAC;;QAuFjB,iBAAiB;IACrB,CAAC;aA3GoB,IAAI;IAoBrB,qBAAM,GAAN;QACI,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAEpB,CAAC;IAED,oBAAK,GAAL;IAEA,CAAC;IACD,0BAAW,GAAX;QACI,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,wCAAwC;QACxC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEnC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE9B,gCAAgC;QAChC,0CAA0C;QAC1C,IAAI;IACR,CAAC;IAED,sBAAO,GAAP;;QACI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAClD,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9C,KAA6C,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAtF,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,QAAA,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,QAAA,CAA+C;SAC3F;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAClC,CAAC;IAED,yBAAU,GAAV;QACI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9B,IAAM,IAAI,GAAG,CAAC,CAAC;QACf,IAAM,IAAI,GAAG,CAAC,CAAC;QACf,IAAM,SAAS,GAAE,GAAG,CAAC;QACrB,IAAM,SAAS,GAAE,GAAG,CAAC;QACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,cAAI,CAAC,CAAA;YACzD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;YACnB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;YAE/B,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC;SAElC;IACL,CAAC;IAED,yBAAU,GAAV;QACI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QAC/D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,uBAAQ,GAAR;QACI,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,kBAAQ,CAAC,CAAC;QACrD,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,2BAAY,GAAZ,UAAa,MAAM;QAEf,IAAI,IAAI,GAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAG,IAAI,GAAG,CAAC,CAAC,EAAG;YACX,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;QAED,IAAG,IAAI,CAAC,YAAY,IAAI,CAAC,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SAC1B;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAEnC,CAAC;;IAvGa,aAAQ,GAAS,IAAI,CAAA;IAEnC;QADC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC;6CACW;IAEpC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;wCACK;IAGzB;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACW;IAE7B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACW;IAXZ,IAAI;QADxB,OAAO;OACa,IAAI,CA2GxB;IAAD,WAAC;CA3GD,AA2GC,CA3GiC,EAAE,CAAC,SAAS,GA2G7C;kBA3GoB,IAAI","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport CharMove from \"./CharMove\";\nimport Food from \"./Food\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Main extends cc.Component {\n\n    public static instance: Main = null\n    @property(cc.SpriteFrame)\n    listspfFood: cc.SpriteFrame [] = [];\n    @property(cc.Prefab)\n    pfFood: cc.Prefab = null;\n\n    @property(cc.Node)\n    listCharMove: cc.Node []= [];\n    @property(cc.Node)\n    nodeListFood: cc.Node = null;\n\n    \n    // LIFE-CYCLE CALLBACKS:\n    foodIndices = [];\n    arrData = [];\n    isMove = false;\n    indexData = -1;\n    countCorrect = 0;\n    onLoad () {\n        Main.instance = this;\n        this.randomFood();\n        this.randomIndex();\n        this.shuffle();\n        this.renderFood();\n        this.charFood();\n       \n    }\n\n    start () {\n\n    }\n    randomIndex() {\n        for(let i = 0; i < this.listspfFood.length; i++) {\n            this.foodIndices.push(i);\n            this.foodIndices.push(i);\n            this.foodIndices.push(i);\n        }\n        // while(this.foodIndices.length < 24) {\n        let randomIndex = Math.floor(Math.random() * this.listspfFood.length);\n        this.foodIndices.push(randomIndex);\n\n        console.log(this.foodIndices);\n\n        //     console.log(randomIndex);\n        //     this.foodIndices.push(randomIndex);\n        // }\n    }\n\n    shuffle() {\n        for (let i = this.foodIndices.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [this.foodIndices[i], this.foodIndices[j]] = [this.foodIndices[j], this.foodIndices[i]];\n        }\n\n        console.log(this.foodIndices);\n    }\n \n    renderFood() {\n        console.log(this.foodIndices);\n        const cols = 5;\n        const rows = 5;\n        const cellSizeX= 150;\n        const cellSizeY= 130;\n        for(let i = 0; i < this.foodIndices.length; i++) {\n            let item = cc.instantiate(this.pfFood).getComponent(Food)\n            item.setId(this.foodIndices[i]);\n            this.nodeListFood.addChild(item.node);\n            let col = i % cols; \n            let row = Math.floor(i / cols);\n    \n            item.node.x = col * cellSizeX;\n            item.node.y = -row * cellSizeY; \n           \n        }\n    }\n\n    randomFood() {\n        let index = Math.floor(Math.random() * this.listspfFood.length)\n        this.arrData.push(index);\n        console.log(this.arrData);\n    }\n    \n    charFood() {\n        this.indexData++;\n        this.isMove = true;\n        let indexFood = this.arrData;\n        let dt = this.listCharMove[0].getComponent(CharMove);\n        dt.food.spriteFrame = this.listspfFood[indexFood[0]];\n    }\n    \n    checkCorrect(idFood) {\n       \n        let test =  this.arrData.indexOf(idFood)\n        console.log(test);\n        if(test > -1 ) {\n            this.countCorrect++;\n        }\n\n        if(this.countCorrect == 3) {\n            console.log(\"you win\");\n        }\n        console.log(this.countCorrect);\n        \n    }\n    // update (dt) {}\n}\n"]}