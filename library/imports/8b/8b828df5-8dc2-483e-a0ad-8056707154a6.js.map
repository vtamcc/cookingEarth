{"version":3,"sources":["assets/res/scripts/Food.ts"],"names":[],"mappings":";;;;;AAAA,oBAAoB;AACpB,4EAA4E;AAC5E,mBAAmB;AACnB,sFAAsF;AACtF,8BAA8B;AAC9B,sFAAsF;;;;;;;;;;;;;;;;;;;;;AAEtF,+BAA0B;AAEpB,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAkC,wBAAY;IAA9C;QAAA,qEAmCC;QAhCG,aAAO,GAAc,IAAI,CAAC;QAG1B,YAAM,GAAY,IAAI,CAAC;QAEvB,QAAE,GAAW,CAAC,CAAC;;QA0Bf,iBAAiB;IACrB,CAAC;IA1BG,oBAAK,GAAL;IAEA,CAAC;IAED,oBAAK,GAAL,UAAM,EAAU;QACZ,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,cAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,0BAAW,GAAX;QACI,IAAI,cAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACpC;QAED,cAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAA;QAC1B,uCAAuC;QACvC,0EAA0E;QAC1E,2BAA2B;QAC3B,IAAI;QAEJ,0EAA0E;QAC1E,sCAAsC;QACtC,IAAI;IAER,CAAC;IA9BD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;yCACM;IAG1B;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;wCACK;IANN,IAAI;QADxB,OAAO;OACa,IAAI,CAmCxB;IAAD,WAAC;CAnCD,AAmCC,CAnCiC,EAAE,CAAC,SAAS,GAmC7C;kBAnCoB,IAAI","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nimport Main from \"./Main\";\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Food extends cc.Component {\n\n    @property(cc.Sprite)\n    spfFood: cc.Sprite = null;\n\n    @property(cc.Node)\n    nCheck: cc.Node = null;\n\n    id: number = 0;\n    start() {\n\n    }\n\n    setId(id: number) {\n        this.id = id;\n        this.spfFood.spriteFrame = Main.instance.listspfFood[id];\n    }\n\n    onClickFood() {\n        if (Main.instance.checkCorrect(this.id)) {\n            this.spfFood.node.active = false;\n        }\n        \n        Main.instance.updateGame()\n        // Main.instance.checkCorrect(this.id);\n        // if (Main.instance.countCorrect > 0 && Main.instance.index == this.id) {\n        //     this.node.destroy();\n        // }\n\n        // if(Main.instance.countCorrect > 3  && Main.instance.index == this.id) {\n        //     Main.instance.countCorrect = 0;\n        // }\n\n    }\n    // update (dt) {}\n}\n"]}